name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cargo-check:
    name: Cargo check
    runs-on:
      group: Default
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: arduino/setup-protoc@v3
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt-check:
    name: Rust fmt
    runs-on:
      group: Default
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test-and-coverage:
    name: Test and Coverage
    runs-on:
      group: Default
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: arduino/setup-protoc@v3

      - name: Install dependencies
        run: |
          rustup self update
          rustup update
          cargo install cargo-tarpaulin

      - name: Run tests with coverage
        run: cargo tarpaulin --all-features --verbose

  release-github-artifact:
    name: Release Packaging
    env:
      PROJECT_NAME_UNDERSCORE: rust-server
    runs-on:
      group: Default
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [cargo-check, fmt-check, test-and-coverage]
    steps:
      - name: Check out from Git
        uses: actions/checkout@v4

      - name: Grant permission to run command
        run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV

      - name: Check if Git tag exists
        run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"

      - name: Skip if Git tag does not exist
        if: steps.check-tag.outputs.HEAD_TAG == ''
        run: exit 0 # Exit with success, effectively skipping subsequent steps

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: arduino/setup-protoc@v3

      - name: Release Build
        run: cargo build --release --all

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME_UNDERSCORE }}
          path: target/release/cli
